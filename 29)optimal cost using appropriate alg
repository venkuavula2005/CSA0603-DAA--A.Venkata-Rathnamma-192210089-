#include <stdio.h>

#define N 4  // Number of items
#define W 7  // Maximum weight capacity

int main() {
    int weights[N] = {1, 3, 4, 5};   // Weights of the items
    int values[N] = {20, 30, 10, 40}; // Values of the items
    int dp[N+1][W+1];                // DP table

    // Initialize the DP table
    for (int i = 0; i <= N; i++)
        for (int w = 0; w <= W; w++)
            if (i == 0 || w == 0)
                dp[i][w] = 0; // Base case: 0 items or 0 capacity

    // Fill the DP table
    for (int i = 1; i <= N; i++) {
        for (int w = 1; w <= W; w++) {
            if (weights[i-1] <= w)
                dp[i][w] = (values[i-1] + dp[i-1][w - weights[i-1]] > dp[i-1][w]) ? 
                            values[i-1] + dp[i-1][w - weights[i-1]] : dp[i-1][w];
            else
                dp[i][w] = dp[i-1][w];
        }
    }

    // The optimal cost is found in dp[N][W]
    printf("The optimal cost is: %d\n", dp[N][W]);
    return 0;
}
