#include <stdio.h>

#define MAX 2  // You can change the matrix size here

int main() {
    int A[MAX][MAX] = { {1, 2}, {3, 4} };
    int B[MAX][MAX] = { {5, 6}, {7, 8} };
    int C[MAX][MAX];

    int M1, M2, M3, M4, M5, M6, M7;
    int temp1, temp2;

    // Calculating M1 to M7 using Strassen's formulas
    M1 = (A[0][0] + A[1][1]) * (B[0][0] + B[1][1]);
    M2 = (A[1][0] + A[1][1]) * B[0][0];
    M3 = A[0][0] * (B[0][1] - B[1][1]);
    M4 = A[1][1] * (B[1][0] - B[0][0]);
    M5 = (A[0][0] + A[0][1]) * B[1][1];
    M6 = (A[1][0] - A[0][0]) * (B[0][0] + B[0][1]);
    M7 = (A[0][1] - A[1][1]) * (B[1][0] + B[1][1]);

    // Calculating C11, C12, C21, C22
    C[0][0] = M1 + M4 - M5 + M7;  // C11
    C[0][1] = M3 + M5;            // C12
    C[1][0] = M2 + M4;            // C21
    C[1][1] = M1 - M2 + M3 + M6;  // C22

    // Printing matrices
    printf("Matrix A:\n");
    for (int i = 0; i < MAX; i++) {
        for (int j = 0; j < MAX; j++) {
            printf("%d ", A[i][j]);
        }
        printf("\n");
    }

    printf("\nMatrix B:\n");
    for (int i = 0; i < MAX; i++) {
        for (int j = 0; j < MAX; j++) {
            printf("%d ", B[i][j]);
        }
        printf("\n");
    }

    printf("\nResultant Matrix C after Strassen's Multiplication:\n");
    for (int i = 0; i < MAX; i++) {
        for (int j = 0; j < MAX; j++) {
            printf("%d ", C[i][j]);
        }
        printf("\n");
    }

    return 0;
}
